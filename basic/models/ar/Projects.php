<?php
/**
 * Created by PhpStorm.
 * User: ialeksandrychev
 * Date: 27.04.16
 * Time: 14:53
 */

namespace app\models\ar;


class Projects extends \app\models\ar\base\Projects
{

    public function beforeSave($insert)
    {
        $this->user = \Yii::$app->user->id;
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }



    public function getEntityForAutocomplete()
    {
        $docIds[] = 0;
        if ($this->documents) {
            foreach ($this->documents as $doc) {
                $docIds[] = $doc->id;
            }
        }
        $itemsToReturn = [];
        $entityToAutocomplite = $this->getEntity();

        if ($entityToAutocomplite) {
            foreach ($entityToAutocomplite as $item) {
                    if ($item != null) {
                        $itemsToReturn[] = $item['name'];
                    }
            }
        }
        $itemsToReturn = array_unique($itemsToReturn);
        $string = implode("', '", $itemsToReturn);


        return "['$string']";
    }

    public function getDocumentsId()
    {
        $docIds = Documents::find()->where(['project_id' => $this->id])->select('id')->asArray()->all();
        if (!$docIds) {
            return false;
        }
        $Ids = array_map(function ($n) {
            return $n['id'];
        }, $docIds);

        return $Ids;
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDocuments()
    {
        return $this->hasMany(Documents::className(), ['project_id' => 'id']);
    }

    public function getNotes()
    {
        $docIds = $this->getDocumentsId();

        if (!$docIds) {
            return false;
        }

        return TagsResult::find()->orderBy('doc_id')->where(['user' => \Yii::$app->user->id])->where(['doc_id' => $docIds])->all();
    }


    public function getEntity()
    {
        $docIds = $this->getDocumentsId();

        if (!$docIds) {
            return false;
        }

        $return = [];
        $tags = TagsResult::find()
            ->select(
                'tag_id, doc_id'
            )
            ->orderBy('doc_id')
            ->where(['user_id' => \Yii::$app->user->id])
            ->where(['doc_id' => $docIds])
            ->all();

        if($tags)
        foreach($tags as $t){
            $return[] = ['name' => $t->tag->title, 'type' => 'tag', 'doc_id' => $t->doc_id];
        }

        $entity = ExtractedEntity::find()->where(['document_id' => $docIds])->all();
        if($entity)
            foreach($entity as $e){
                $return[] = ['name' => $e->entity, 'type' => $e->type, 'doc_id' => $e->document_id];
            }

        $dates = ExtractedDate::find()->where(['document_id' => $docIds])->all();
        if($dates)
            foreach($dates as $e){
                $return[] = ['name' => $e->date, 'type' => 'date', 'doc_id' => $e->document_id];
            }

        return $return;
    }


    public function extraFields()
    {
        return [
            'documents',
            'entity'
        ];
    }


}
